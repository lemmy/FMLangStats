{"version":3,"sources":["common/LangChartConfig.js","components/LangChart.js","common/NoLanguages.js","common/RenameLanguages.js","components/LangTable.js","components/LicensePie.js","components/Button.js","components/Head.js","components/Header.js","components/Content.js","components/Comments.js","components/Footer.js","common/utils.js","components/Select.js","reducers/EventReducer.js","reducers/TableReducer.js","reducers/HistReducer.js","components/Layout.js","index.js"],"names":["credits","enabled","chart","type","backgroundColor","width","isMobile","title","text","xAxis","categories","labels","formatter","this","value","yAxis","plotOptions","spline","lineWidth","states","hover","marker","series","animation","duration","responsive","rules","condition","maxWidth","chartOptions","legend","layout","align","verticalAlign","tooltip","color","name","y","toFixed","LangChart","props","visible","useState","ChartConfig","state","setState","_","debounce","dataLength","percentageData","data","total","pipe","map","unzip","sum","zipData","update","x","zipWith","divide","fillZeros","HistSize","size","max","d","Array","fill","concat","createSeriesPercentage","top","Math","floor","uniqBy","reject","o","includes","convert","cap","i","GitHubColors","get","random","toString","filter","createSeries","constructChart","length","newState","isEqual","updateState","tickLength","drop","flatten","year","quarter","range","useEffect","lang","match","params","split","undefined","store","take","sortBy","table","hist","style","margin","highcharts","Highcharts","options","vim","before","after","fortran","LangTable","filterNonProgrammingLanguages","NoLanguages","applyLanguageRenamings","r","find","RenameLanguages","findByName","first","omitBy","isNil","createTable","date","addSortId","assign","id","pick","filterDate","mountTable","current","last","curYearRanking","lastYearRanking","langRanking","c","change","count","getChange","trend","dispatch","payload","Number","className","overflowX","condensed","striped","tableStyle","bordered","wrapperClasses","dataAlign","dataField","isKey","dataFormat","cell","row","font","percent","countPercent","repeat","n","isNaN","angle","dir","arrow","LicensePie","config","point","percentage","mapKeys","k","licenses","Button","history","event","onClick","a","slice","push","Application","Helmet","meta","charset","Header","href","target","position","Content","marginTop","marginBottom","textAlign","fontSize","Comments","Footer","rel","getMaxDataDate","values","pullRequests","maxQuarter","Select","vals","start","end","label","setValue","histPush","z","then","maxDate","styles","control","provided","height","valueContainer","paddingRight","onChange","searchable","clearable","eventReducer","action","starEvent","pushEvent","issueEvent","tableReducer","Error","histReducer","Layout","useReducer","TableReducer","HistReducer","EventReducer","path","render","route","production","window","location","defaultPath","loc","isValidURL","some","v","url","pushState","document","getElementById","hasChildNodes","hydrate","main"],"mappings":"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","file":"static/js/main.58494c85.chunk.js","sourcesContent":["/**\n * Config for the language chart\n * Contains initial Highcharts configuration\n * Please note that the license for this file is\n * not AGPL-3.0 since Highcharts is licensed under CC BY-NC 3.0\n * If Highcharts gets replaced in the future this class will\n * be rewritten and licensed under AGPL-3.0\n * @author Fabian Beuke <mail@beuke.org>\n * @license CC BY-NC 3.0\n * @see {@link https://creativecommons.org/licenses/by-nc/3.0/}\n */\n\nimport { isMobile } from \"react-device-detect\"\n\nexport default {\n    credits: { enabled: false },\n    chart: {\n        type: \"spline\",\n        backgroundColor: \"transparent\",\n        width: isMobile ? 0 : 1400,\n    },\n    title: { text: \"\" },\n    xAxis: { categories: [],\n        labels: {\n            formatter: function () {\n                return this.value\n            },\n        },\n    },\n    yAxis: {\n        title: {\n            text: \"\",\n        },\n        labels: {\n            formatter: function () {\n                return this.value * 100 + \"%\"\n            },\n        },\n    },\n    plotOptions: {\n        spline: {\n            lineWidth: 3,\n            states: { hover: { lineWidth: 5 } },\n            marker: { enabled: false },\n        },\n        series: {\n            animation: {\n                duration: 200,\n            },\n        },\n    },\n    responsive: {\n        rules: [\n            {\n                condition: {\n                    maxWidth: 0,\n                },\n                chartOptions: {\n                    chart: { width: null },\n                    legend: {\n                        layout: \"horizontal\",\n                        align: \"center\",\n                        verticalAlign: \"bottom\",\n                    },\n                },\n            },\n        ],\n    },\n    tooltip: {\n        formatter: function () {\n            return (\n                '<span style=\"color:' +\n                this.series.color +\n                '\">' +\n                this.series.name +\n                \"</span>: <b>\" +\n                (this.y * 100).toFixed(2) +\n                \"%</b>\"\n            )\n        },\n    },\n}\n","/**\n * Programming language popularity chart based on Highcharts\n * Please note that this file is dual licensed since Highcharts\n * is licensed under CC BY-NC 3.0\n * If Highcharts gets replaced in the future this class\n * will be licensed under AGPL-3.0 only\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0 everything except Highcharts\n * @license CC BY-NC 3.0 Highcharts\n * @see {@link https://creativecommons.org/licenses/by-nc/3.0/}\n */\n\nimport { useState, useEffect } from \"react\"\nimport ChartConfig from \"common/LangChartConfig\"\nimport Highcharts from \"highcharts\"\nimport HighchartsReact from \"highcharts-react-official\"\nimport GitHubColors from \"github-colors\"\nimport { isMobile } from \"react-device-detect\"\nimport _ from \"lodash/fp\"\n\nexport default function LangChart(props) {\n    const [state, setState] = useState(ChartConfig)\n    const [debounce] = useState(() => _.debounce(200)(setState))\n    let dataLength = 0\n    let visible\n    const style = {\n        margin: \"auto\",\n        maxWidth: \"100%\",\n    }\n\n    /**\n     * Creates Highcharts xAxis categories since 2012\n     * quarter wise: 2012/Q1, 2012/Q2, ...\n     * @returns {Object} xAxis categories (year/quarter)\n     */\n    function categories() {\n        return _.drop(\n            1,\n            _.flatten(\n                _.map(\n                    (year) =>\n                        _.map(\n                            (quarter) => (quarter === 1 ? year.toString() : \"\"),\n                            _.range(1, 5)\n                        ),\n                    _.range(2012, 2050)\n                )\n            )\n        )\n    }\n\n    /**\n     * Calculates relative / percentage of series data\n     * Example: Pull Request -> JavaScript 22.2%, C# 4%, ..\n     * @param {Object} current - GitHub api data set\n     * @returns {Object} Data series with percentage data\n     */\n    function percentageData(data) {\n        const total = _.pipe(_.map(\"data\"), _.unzip, _.map(_.sum))(data)\n        const zipTotal = (x) => _.zipWith(_.divide, x)(total)\n        const zipData = _.pipe(_.update(\"data\"))(zipTotal)\n        return _.map(zipData, data)\n    }\n\n    /**\n     * Adds zeros if we dont have enough historical data. For example,\n     * there is no data for Typescript in 2012/Q2.\n     * @param {Object} current - GitHub api data set\n     * @returns {Object} Data series filled with zeros if required\n     */\n    function fillZeros(data) {\n        const HistSize = _.pipe(_.map(\"data\"), _.map(_.size), _.max)(data)\n        const fill = (d) => new Array(HistSize - _.size(d)).fill(0).concat(d)\n        return _.map(_.update(\"data\", fill))(data)\n    }\n\n    /**\n     * Creates a data series for highcharts based on GitHub raw api data\n     * Filters top 10 languages\n     * @param {Object} current - GitHub api data set\n     * @returns {Object} Data series for top 10 languages\n     */\n    const createSeries = (top) => (data) => {\n        return _.pipe(\n            _.uniqBy(\"name\"),\n            _.reject((o) => !_.includes(o.name)(top)),\n            _.map.convert({ cap: 0 })((d, i) => ({\n                name: d.name,\n                color: GitHubColors.get(d.name)\n                    ? GitHubColors.get(d.name).color // or random color\n                    : \"#\" + Math.floor(Math.random() * 16777215).toString(16),\n                visible: visible ? visible.includes(d.name) : i < 7,\n                data: _.map(\"count\")(_.filter({ name: d.name })(data)),\n            })),\n            fillZeros\n        )(data)\n    }\n\n    /*\n     * Updates react state if state has changed\n     */\n    function updateState(newState) {\n        if (!_.isEqual(state, newState)) {\n            debounce(newState)\n        }\n    }\n\n    /*\n     * Creates a new percentage series of data\n     */\n    function createSeriesPercentage(data, top) {\n        return _.pipe(\n            _.map(_.update(\"count\")(Math.floor)),\n            createSeries(top),\n            percentageData\n        )(data)\n    }\n\n    /**\n     * Creates a new chart if state has changed\n     */\n    function constructChart(data, title, top) {\n        if (data.length === dataLength && _.size(top) === 0) {\n            return\n        }\n\n        dataLength = data.length\n        const newState = {\n            ...state,\n            yAxis: {\n                ...state.yAxis,\n                title: { text: isMobile ? \"\" : title },\n            },\n            series: createSeriesPercentage(data, top),\n            xAxis: { tickLength: 0, categories: categories() },\n        }\n        updateState(newState)\n    }\n\n    /**\n     * Native react function, called on component mount and\n     * on every prop change event\n     */\n    useEffect(() => {\n        const { lang } = props.match.params\n        visible = lang ? lang.split(\",\") : undefined\n        const [store] = props.store\n        const data = store.data\n        const title = store.name\n        const top = _.pipe(\n            _.take(50),\n            _.sortBy(\"name\"),\n            _.map(\"name\")\n        )(props.table[0].data)\n\n        constructChart(data, title, top)\n    }, [props.hist, props.store, props.table])\n\n    if (state && state.series && state.series.length === 0) return null\n    return (\n        <center>\n            <div style={style}>\n                <HighchartsReact highcharts={Highcharts} options={state} />\n            </div>\n        </center>\n    )\n}\n","/**\n * Contains all languages that are no programming lanuages\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n * @see {@link https://github.com/github/linguist/blob/master/lib/linguist/languages.yml}\n */\nexport default [\n    \"ApacheConf\",\n    \"ApacheConf\",\n    \"Arduino\",\n    \"Batchfile\",\n    \"BitBake\",\n    \"CMAKE\",\n    \"CMake\",\n    \"CSS\",\n    \"Dockerfile\",\n    \"GCC Machine Description\",\n    \"Gettext Catalog\",\n    \"Gherkin\",\n    \"Groff\",\n    \"HCL\",\n    \"HTML\",\n    \"Handlebars\",\n    \"Jupyter Notebook\",\n    \"Lex\",\n    \"M4\",\n    \"Makefile\",\n    \"NSIS\",\n    \"Nginx\",\n    \"PLSQL\",\n    \"PLpgSQL\",\n    \"Perl6\",\n    \"Protocol Buffer\",\n    \"QMake\",\n    \"SaltStack\",\n    \"SCSS\",\n    \"Starlark\",\n    \"Stylus\",\n    \"Scilab\",\n    \"Smarty\",\n    \"TeX\",\n    \"Vue\",\n    \"XML\",\n    \"XSLT\",\n    \"Yacc\",\n    \"YAML\"\n]\n","/**\n * Keeps language renamings that can happen\n * when the github api decides to change the language name,\n * to keep consistency we always choose the latest name and\n * replace all older names\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n */\n\nexport default {\n    vim: {\n        before: [\"VimL\"],\n        after: \"Vim script\",\n    },\n    fortran: {\n        before: [\"FORTRAN\"],\n        after: \"Fortran\",\n    },\n}\n","/**\n * The LangTable contains the top 50 programming languages\n * for a given quarter, e.g. 2017/Q2\n * Features: Trend, Percentage & Change, History, different data sets\n * PR/Push/Stars ...\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n */\n\nimport { useState, useEffect } from \"react\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\"\nimport NoLanguages from \"common/NoLanguages\"\nimport RenameLanguages from \"common/RenameLanguages\"\nimport _ from \"lodash/fp\"\n\nexport default function LangTable({store, hist, table}) {\n    const [state, setState] = useState({ data: [] })\n    const style = {\n        margin: \"auto\",\n        maxWidth: 810,\n        overflowX: \"auto\"\n    }\n\n    /**\n     * Filter data set by year and quarter\n     * @param {Object} data - GitHub api data set\n     * @param {number} year - Example 2017\n     * @param {number} quarter - Example 2\n     */\n    function filterDate(data, year, quarter) {\n        return _.pipe(\n            _.filter({ year: year, quarter: quarter }),\n            _.map(_.pick([\"name\", \"count\"]))\n        )(data)\n    }\n\n    /**\n     * The GitHub API keeps track of languages such as\n     * Jupyter Notebook in which we are not interested,\n     * since these are no programming languages\n     * Filters non programming languages\n     * @param {Object} data - GitHub api data set\n     */\n    function filterNonProgrammingLanguages(data) {\n        return _.reject((o) => _.includes(o.name)(NoLanguages))(data)\n    }\n\n    /**\n     * The GitHub API changes names (language renamings),\n     * therefore we keep track of them and always choose\n     * the latest name (replace old names) to keep consistency\n     * @param {Object} data - GitHub api data set\n     */\n    function applyLanguageRenamings(data) {\n        const rename = (name) => {\n            const r = _.find((o) => _.includes(name, o.before))(RenameLanguages)\n            return r ? r.after : name\n        }\n        return _.map(_.update(\"name\")(rename))(data)\n    }\n\n    /**\n     * Two up arrows: more than 3 ranks up or previoulsy unkown\n     * Two down arrorw: more than 3 ranks down\n     * One up arrow: 1-3 ranks up\n     * One down arrow: 1-3 ranks down\n     * Nothing: no change\n     * @param {Object} cell - Cell content of the table\n     * @param {Object} row - Row content of the table\n     */\n    function trendFormatter(cell, _) {\n        const arrow = (n) => {\n            const angle = (dir) => `<i class='fas fa-angle-${dir}'></i>`\n            switch (true) {\n                case n === 0:\n                    return \"\"\n                case n > 3:\n                    return angle(\"double-up\")\n                case n < -3:\n                    return angle(\"double-down\")\n                case n < 0:\n                    return angle(\"down\")\n                case n > 0:\n                    return angle(\"up\")\n                default:\n                    // direct jump to top 50 and previously unkown\n                    return angle(\"double-up\")\n            }\n        }\n        return `${arrow(cell)}`\n    }\n\n    /**\n     * Lemma function filters dataset by name and returns first it finds\n     * @param {Object} data - GitHub api data set\n     * @param {string} name - Name to search for\n     * @returns {Object} Search result\n     */\n    function findByName(data, name) {\n        return _.pipe(_.filter({ name: name }), _.first, _.omitBy(_.isNil))(data)\n    }\n\n    /**\n     * Calculate the trend difference in ranking over a one year period\n     * @param {Object} current - GitHub api data set current year\n     * @param {Object} last - GitHub api data set last year\n     * @returns {Object} Data set ++ trend diff\n     */\n    function getTrend(current, last) {\n        return _.pipe(\n            _.map((c) =>\n                _.assign({\n                    trend: findByName(last, c.name).id - c.id,\n                })(c)\n            ),\n            _.take(50)\n        )(current)\n    }\n\n    /**\n     * Calculate the percental change in ranking over a one year period\n     * @param {Object} current - GitHub api data set current year\n     * @param {Object} last - GitHub api data set last year\n     * @returns {Object} Data set ++ change as number\n     */\n    function getChange(current, last) {\n        return _.pipe(\n            _.map((c) =>\n                _.assign({\n                    change: c.count - findByName(last, c.name).count,\n                })(c)\n            ),\n            _.take(50)\n        )(current)\n    }\n\n    /**\n     * Composition of multiple functions, such as non programming\n     * language filter, language renaming and indexing to create\n     * a table from a raw data set for a given year and quarter\n     * @param {Object} data - GitHub api data set\n     * @param {number} year - e.g. 2017\n     * @param {number} quarter - e.g. 2\n     * @returns {Object} filtered and indexed data set (table)\n     */\n    function createTable(date, year, quarter) {\n        const addSortId = _.map.convert({ cap: 0 })((o, i) =>\n            _.assign({ id: ++i })(o)\n        )\n\n        return _.pipe(\n            filterNonProgrammingLanguages,\n            applyLanguageRenamings,\n            addSortId,\n            percentageData\n        )(filterDate(date, year, quarter))\n    }\n\n    /**\n     * Sets ranking table state based on given props (api data)\n     * Gets called on componentDidMount and sets react state on prop change\n     */\n    function mountTable() {\n\n        const data = store[0].data\n        const { year, quarter } = hist[0]\n        const dec = (i) => _.toString(--i)\n\n        const curYearRanking = createTable(data, year, quarter)\n        const lastYearRanking = createTable(data, dec(year), quarter)\n        const trendRanking = getTrend(curYearRanking, lastYearRanking)\n        const langRanking = getChange(trendRanking, lastYearRanking)\n\n        if (!_.isEqual(state.data, langRanking)) {\n            const [, dispatch] = table\n            dispatch({ type: \"set\", payload: langRanking })\n            setState({ data: langRanking })\n        }\n    }\n\n    /**\n     * Converts the absolute raw counts to percentage values\n     * A \"count\" is e.g. the number of Pull Requests per language\n     * @param {Object} data - GitHub api data set\n     * @returns {Object} Data set with percentage count\n     */\n    function percentageData(data) {\n        const total = _.pipe(_.map(\"count\"), _.map(Number), _.sum)(data)\n        return _.pipe(_.map(_.update(\"count\")((d) => d / total)))(data)\n    }\n\n    /**\n     * Native react function, called on component mount and\n     * on every prop change\n     */\n    useEffect(() => {\n        mountTable()\n    }, [hist, table])\n\n    /**\n     * Formatter that applies color, percentage and change from raw\n     * cell data, make it visual grokkable\n     * @param {Object} cell - Cell content of the table\n     * @param {Object} row - Row content of the table\n     * @returns {Object} Formatted cell content\n     */\n    function percentFormatter(cell, row) {\n        const font = (i, color) =>\n            `<font size=\"1\">(<font color=\"${color}\">${i}%</font>)</font>`\n        const colorize = (i) =>\n            i >= 0 ? font(\"+\" + i, \"green\") : font(i, \"chrimson\")\n        const percent = (i) => (i * 100).toFixed(3)\n        const countPercent = (percent(row.count)) + \"%\"\n        // NaN can happen in case of new first seen languages,\n        // hence we say 0% change\n        const normalize = (n) => (_.isNaN(n) ? 0.0 : n)\n        const offset = \"\\u00A0\".repeat(6)\n        return (\n            offset +\n            (row.id > 30\n                ? countPercent\n                : `${\n                      countPercent +\n                      (\"  \" + (_.pipe(normalize, percent, colorize)(row.change)))\n                  }`)\n        )\n    }\n\n    /**\n     * Provides empty default table when no data is available or data is\n     * still loading\n     * @returns {Object} html content for emtpy table\n     */\n    function noDataAvailableYet() {\n        return (\n            <div className=\"emptyTable\">\n                <h2>No data available for time period yet</h2>\n            </div>\n        )\n    }\n\n    if (state.data.length < 50) return noDataAvailableYet()\n    return (\n        <div style={style}>\n            <BootstrapTable\n                condensed\n                striped\n                tableStyle={{ margin: \"30px auto 30px auto\", width: \"100%\" }}\n                data={state.data}\n                bordered={false}\n                wrapperClasses=\"table-responsive\"\n            >\n                <TableHeaderColumn\n                    width=\"100px\"\n                    dataAlign=\"center\"\n                    dataField=\"id\"\n                    isKey={true}\n                >\n                    {\"# Ranking\"}\n                </TableHeaderColumn>\n                <TableHeaderColumn\n                    width={\"230px\"}\n                    dataAlign=\"center\"\n                    dataField=\"name\"\n                >\n                    {\"Programming Language\"}\n                </TableHeaderColumn>\n                <TableHeaderColumn\n                    width={\"230px\"}\n                    dataField=\"count\"\n                    dataAlign=\"center\"\n                    dataFormat={percentFormatter}\n                >\n                    Percentage (YoY Change)\n                </TableHeaderColumn>\n                <TableHeaderColumn\n                    width=\"100px\"\n                    dataAlign=\"center\"\n                    dataField=\"trend\"\n                    dataFormat={trendFormatter}\n                >\n                    YoY Trend\n                </TableHeaderColumn>\n            </BootstrapTable>\n        </div>\n    )\n}\n","/**\n * A Highcharts chart that shows the top five licenses on GitHub\n * Please note that the license for this file is\n * not AGPL-3.0 since Highcharts is licensed under CC BY-NC 3.0\n * If Highcharts gets replaced in the future this class will\n * be rewritten and licensed under AGPL-3.0\n * @author Fabian Beuke <mail@beuke.org>\n * @license CC BY-NC 3.0\n * @see {@link https://creativecommons.org/licenses/by-nc/3.0/}\n */\n\nimport { useState, useEffect } from \"react\";\nimport licenses from \"data/github-licenses.json\"\nimport Highcharts from \"highcharts\"\nimport HighchartsReact from \"highcharts-react-official\"\nimport _ from \"lodash/fp\"\n\nexport default function LicensePie() {\n    const config = {\n        credits: { enabled: false },\n        chart: { type: \"pie\", backgroundColor: \"transparent\" },\n        title: { text: \"Top 5 Open Source Licenses\" },\n        tooltip: {\n            formatter: function () {\n                return (\n                    '<span style=\"color:' +\n                    this.series.color +\n                    '\">' +\n                    this.point.name +\n                    \"</span>: <b>\" +\n                    this.percentage.toFixed(2) +\n                    \"%</b>\"\n                )\n            },\n        },\n    }\n\n    const [state, setState] = useState(config)\n\n    useEffect(() => {\n        const series = _.pipe(\n            _.map(_.mapKeys((k) => (k === \"license\" ? \"name\" : \"y\"))),\n            _.map(_.update(\"y\")(Math.floor)),\n            _.take(5)\n        )(licenses)\n        setState({ ...config, series: [{ data: series }] })\n    }, [])\n\n    return (\n        <center>\n            <HighchartsReact highcharts={Highcharts} options={state} />\n        </center>\n    )\n}\n","/**\n * Material button to select the data set\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n */\n\nimport { useEffect, useState } from \"react\";\nimport { Button as MaterialButton } from \"react-materialize\"\n\nexport default function Button({ match, store, history }) {\n    const [state, setState] = useState([\n        \"pushes\",\n        \"stars\",\n        \"issues\",\n        \"pull_requests\",\n    ])\n\n    useEffect(() => {\n        store[1]({ type: match.params.event })\n    }, [match.params.event])\n\n    function next() {\n        const rotateRight = (a) => [...a.slice(1, a.length), a[0]]\n        setState(rotateRight(state))\n        history.push(\n            \"/\" +\n                state[0] +\n                \"/\" +\n                match.params.year +\n                \"/\" +\n                match.params.quarter +\n                (match.params.lang ?\n                (\"/\" + match.params.lang) : \"\")\n        )\n    }\n\n    return (\n        <div>\n            <center>\n                <MaterialButton\n                    className={\n                        \"waves-effect waves-light blue-grey darken-1 btn\"\n                    }\n                    onClick={next}\n                >\n                    {store[0].name}\n                </MaterialButton>\n            </center>\n        </div>\n    )\n}\n","/**\n * Contains everything that belongs into the html head\n * Title, css, fonts\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n */\n\nimport Helmet from \"react-helmet\"\n\nexport default function Application() {\n    return (\n        <div className=\"application\">\n            <Helmet\n                title=\"Github Language Stats\"\n                meta={[{ charset: \"utf-8\" }]}\n            />\n        </div>\n    )\n}\n","/**\n * Contains everything that belongs into the page header\n * Please note this class is not to be confused with Head.js (html head)\n * Fork me ribbon, page title and desc\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n */\n\nimport GitHubForkRibbon from \"react-github-fork-ribbon\";\n\nexport default function Header() {\n    return (\n        <div id=\"wrapper\">\n            <div id=\"header\">\n                <h1>\n                    Git<b>Hut 2.0</b>\n                </h1>\n                <h2>A small place to discover languages in GitHub</h2>\n            </div>\n            <GitHubForkRibbon\n                href=\"//github.com/madnight/githut\"\n                color=\"black\"\n                target=\"_blank\"\n                position=\"right\"\n            >\n                Fork me on GitHub\n            </GitHubForkRibbon>\n        </div>\n    )\n}\n","/**\n * The description / explanation of the chart and table, explains\n * data source, data aggregation, trend calculation, ...\n * Compiles markdown into html, content.md -> html\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n */\n\nexport default function Content() {\n    return (\n        <div\n            style={{\n                margin: \"auto\",\n                marginTop: \"40px\",\n                marginBottom: \"40px\",\n                maxWidth: 760,\n                textAlign: \"justify\",\n                fontSize: 13,\n            }}\n        >\n            <h4 id=\"githut-2-0\">GITHUT 2.0</h4>\n            <p className=\"responsivity-mobile-modif\">\n                GitHut 2.0 is an attempt to continue the{\" \"}\n                <a href=\"http://githut.info\">githut.info</a> project. GitHub is\n                the largest code host in the world, with 40 million users and\n                more than 190 million repositories as of January 2020. By\n                analyzing how languages are used in GitHub it&#39;s possible to\n                understand the popularity of programming languages among\n                developers and to discover the unique characteristics of each\n                language. GitHub provides a public{\" \"}\n                <a href=\"//developer.github.com/v3/\">API</a> to interact with\n                its huge dataset of events and interaction with the hosted\n                repositories. The{\" \"}\n                <a href=\"//githubarchive.org/\">GitHub Archive</a> project goes\n                one step further by aggregating and storing the API data over\n                time. The quantitative data used in GitHut 2.0 is collected from\n                the GitHub Archive dataset via{\" \"}\n                <a href=\"//developers.google.com/bigquery/\">Google BigQuery</a>.\n            </p>\n            <p className=\"responsivity-mobile-modif\">\n                The language percentage distribution in the line chart shows the\n                top 10 (or manually selected) languages since 2012/Q2. The\n                ranking table shows the top 50 languages of the last quarter.\n                The percentage values are the actual fractions of pull requests,\n                pushes, stars or issues in relation to the top 50 languages in\n                the table. The YoY change shows the difference in percentage\n                compared to the same time period last year. The YoY trend arrows\n                indicate the change in ranking. Two arrows up/down stands for\n                more than three ranks up/down within one year. No arrow\n                indicates that nothing has changed and one arrow fills the gap.\n                Please note that it is possible that the ranking shown in the\n                table does not match the chart ranking, since they are\n                calculated over a different time period (quarter vs. full\n                history). Please also note that there is not enough data\n                available in the GitHub Archive dataset to calculate a\n                statistical accurate ranking table or chart for any time period\n                before 2012/Q2.\n            </p>\n            <h4 id=\"related-work\">Related Work</h4>\n            <ul>\n                <li className=\"responsivity-mobile-modif\">\n                    <a href=\"//tiobe.com/tiobe-index/\">\n                        TIOBE Programming Community Index\n                    </a>{\" \"}\n                    is a measure of popularity of programming languages, created\n                    and maintained by the TIOBE Company based in Eindhoven, the\n                    Netherlands.\n                </li>\n                <li className=\"responsivity-mobile-modif\">\n                    <a href=\"//redmonk.com/sogrady/2016/07/20/language-rankings-6-16/\">\n                        The RedMonk Programming Language Rankings\n                    </a>{\" \"}\n                    are derived from a correlation of programming traction on\n                    GitHub and Stack Overflow.\n                </li>\n                <li className=\"responsivity-mobile-modif\">\n                    <a href=\"//pypl.github.io/PYPL.html\">\n                        The PYPL PopularitY of Programming Language Index\n                    </a>{\" \"}\n                    is created by analyzing how often language tutorials are\n                    searched on Google.\n                </li>\n                <li className=\"responsivity-mobile-modif\">\n                    <a href=\"//langpop.corger.nl\">\n                        Programming Language Popularity Chart\n                    </a>{\" \"}\n                    shows GitHub (lines changed) and StackOverflow (tags) ratio\n                    for programming languages.\n                </li>\n            </ul>\n        </div>\n    )\n}\n","/**\n * Simple discussion box\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n */\n\nexport default function Comments() {\n    return (\n        <div style={{ margin: \"auto\", maxWidth: 760 }} id=\"disqus_thread\"></div>\n    )\n}\n","/**\n * Contains everything that belongs into the html footer\n * License, Credits\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n */\nexport default function Footer() {\n    return (\n        <div id=\"footer\">\n            <div id=\"licence\" className=\"clearfix\">\n                Credits to <a href=\"//github.com/littleark\">Carlo Zapponi</a>\n                <br />\n                This work is licensed under the{\" \"}\n                <a // eslint-disable-line react/jsx-no-target-blank\n                    rel=\"noopener\"\n                    href=\"//www.gnu.org/licenses/agpl-3.0.en.html\"\n                    target=\"_blank\"\n                >\n                    GNU Affero General Public License\n                </a>\n            </div>\n        </div>\n    )\n}\n","import { map, max, values, filter, pipe } from \"lodash/fp\"\nimport pullRequests from \"data/gh-pull-request.json\"\n\nexport async function getMaxDataDate() {\n    const year = pipe(map(\"year\"), values, max)(pullRequests)\n    const maxQuarter = pipe(\n        filter({ year: year }),\n        map(\"quarter\"),\n        values,\n        max\n    )(pullRequests)\n    return { year: year, quarter: maxQuarter }\n}\n","import { useState, useEffect } from \"react\";\nimport ReactSelect from \"react-select\"\nimport { range, toString } from \"lodash/fp\"\nimport { getMaxDataDate } from \"common/utils.js\"\n\nexport default function Select(props) {\n    const year = props.year\n    const [state, setState] = useState({})\n\n    function vals(start, end) {\n        return range(--start, end).map((i) => ({\n            value: toString(i + 1),\n            label: toString(i + 1),\n        }))\n    }\n\n    function setValue(value) {\n        const [_, dispatch] = props.hist\n\n        dispatch({ type: year ? \"setYear\" : \"setQuarter\", payload: value })\n        setState({ ...state, value: value })\n    }\n\n    useEffect(() => {\n        getMaxDataDate().then((maxDate) => {\n            setState({\n                ...state,\n                options: year ? vals(2014, maxDate.year) : vals(1, 4),\n                value: year\n                    ? props.match.params.year\n                    : props.match.params.quarter,\n            })\n        })\n        const { params } = props.match\n        setValue(year ? params.year : params.quarter)\n    }, [])\n\n    function histPush(x, y, z) {\n        const { params } = props.match\n        const lang = (params.lang ?  (\"/\" + params.lang) : \"\")\n        props.history.push(\"/\" + x + \"/\" + y + \"/\" + z + lang)\n    }\n\n    function onChange({ value }) {\n        const { params } = props.match\n        setValue(value)\n        if (year) {\n            histPush(params.event, value, params.quarter)\n        } else {\n            histPush(params.event, params.year, value)\n        }\n    }\n\n    if (!state) return null\n    const styles = {\n        control: (provided) => ({ ...provided, height: 38 }),\n        valueContainer: (provided) => ({ ...provided, height: 38 }),\n    }\n    return (\n        <div style={{ width: \"200px\", paddingRight: \"20px\" }}>\n            <h4 className=\"section-heading\">{year ? \"Year\" : \"Quarter\"}</h4>\n            <ReactSelect\n                styles={styles}\n                onChange={onChange}\n                options={state.options}\n                searchable={false}\n                clearable={false}\n                value={{ value: state.value, label: state.value }}\n            />\n        </div>\n    )\n}\n","/**\n * This reducer keeps track of the state of\n * Pull Request, Pushes, Stars or Issues depending on users choice\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n */\nexport default function eventReducer(state, action) {\n    switch (action.type) {\n        case \"pull_requests\":\n            return { ...state, name: \"Pull Request\", data: state.pullRequests }\n        case \"stars\":\n            return { ...state, name: \"Stars\", data: state.starEvent }\n        case \"pushes\":\n            return { ...state, name: \"Pushes\", data: state.pushEvent }\n        case \"issues\":\n            return { ...state, name: \"Issues\", data: state.issueEvent }\n        default:\n            return { ...state, name: \"Pull Request\", data: state.pullRequests }\n    }\n}\n","export default function tableReducer(state, action) {\n    switch (action.type) {\n        case \"set\":\n            return { data: action.payload }\n        default:\n            throw new Error()\n    }\n}\n","/**\n * This reducer handles year and quarter state changes\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n */\n\nexport default function histReducer(state, action) {\n    switch (action.type) {\n        case \"setYear\":\n            return { ...state, year: action.payload }\n        case \"setQuarter\":\n            return { ...state, quarter: action.payload }\n        default:\n            throw new Error()\n    }\n}\n","/**\n * Layout class that is used to compose all react\n * components into one app div\n * Provides dependency injection via props\n * Contains no logic and no functions except render\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n */\n\nimport { useReducer } from \"react\";\nimport { Route } from \"react-router-dom\"\nimport LangChart from \"components/LangChart\"\nimport LangTable from \"components/LangTable\"\nimport LicensePie from \"components/LicensePie\"\nimport Button from \"components/Button\"\nimport Head from \"components/Head\"\nimport Header from \"components/Header\"\nimport Content from \"components/Content\"\nimport Comments from \"components/Comments\"\nimport Footer from \"components/Footer\"\nimport Select from \"components/Select\"\nimport EventReducer from \"reducers/EventReducer\"\nimport TableReducer  from \"reducers/TableReducer\"\nimport HistReducer  from \"reducers/HistReducer\"\nimport pullRequests from \"data/gh-pull-request.json\"\nimport pushEvent from \"data/gh-push-event.json\"\nimport starEvent from \"data/gh-star-event.json\"\nimport issueEvent from \"data/gh-issue-event.json\"\n\nexport default function Layout() {\n\n    const table = useReducer(TableReducer, {});\n    const hist = useReducer(HistReducer, { year: \"2018\", quarter: \"1\" });\n    const event = useReducer(EventReducer, {\n        data: pullRequests,\n        name: \"Pull Requests\",\n        pullRequests,\n        pushEvent,\n        starEvent,\n        issueEvent,\n    });\n\n    return (\n        <div>\n            <Head />\n            <Header />\n            <Route\n                path=\"/:event?/:year?/:quarter?/:lang?\"\n                render={(route) => (\n                    <div>\n                        <LangChart\n                            {...route}\n                            store={event}\n                            hist={hist}\n                            table={table}\n                        />\n                        <Button {...route} store={event} />\n                        <div className=\"rowCenter\">\n                            <Select {...route} hist={hist} year=\"true\" />\n                            <Select {...route} hist={hist} />\n                        </div>\n                        <LangTable\n                            store={event}\n                            hist={hist}\n                            table={table}\n                        />\n                    </div>\n                )}\n            />\n            <LicensePie />\n            <Content />\n            <Comments />\n            <Footer />\n        </div>\n    )\n}\n","/**\n * Entrypoint for the react app\n * Provides a basic app wrapper for react\n * @author Fabian Beuke <mail@beuke.org>\n * @license AGPL-3.0\n */\n\nimport { HashRouter } from \"react-router-dom\";\nimport Layout from \"components/Layout\"\nimport { getMaxDataDate } from \"common/utils.js\"\nimport { hydrate, render } from \"react-dom\"\n\nconst production = window.location.href.includes(\"madnight.github.io\")\n\nconst main = async () => {\n    const { year, quarter } = await getMaxDataDate()\n    const defaultPath = \"#/pull_requests/\" + year + \"/\" + quarter\n    const loc = window.location.href\n    const validUrlParams = [\"pull_requests\", \"pushes\", \"stars\", \"issues\"]\n    const isValidURL = validUrlParams.some((v) => loc.includes(v))\n    const url = (production ? \"/githut/\" : \"/\") + defaultPath\n\n    if (!isValidURL) {\n        window.history.pushState(\"\", \"\", url)\n    }\n\n    const rootElement = document.getElementById(\"root\")\n    if (rootElement.hasChildNodes()) {\n        hydrate(\n            <HashRouter>\n                <Layout />\n            </HashRouter>,\n            document.getElementById(\"root\")\n        )\n    } else {\n        render(\n            <HashRouter>\n                <Layout />\n            </HashRouter>,\n            document.getElementById(\"root\")\n        )\n    }\n}\n\nmain()\n"],"sourceRoot":""}